gitlab:
  image: "gitlab/gitlab-ee:latest"
  restart: always
  hostname: {{ gitlab_url }}
  environment:
    GITLAB_OMNIBUS_CONFIG: |
      external_url "https://{{ gitlab_url }}"
      gitlab_rails['lfs_enabled'] = {{ lfs_enabled|lower }}
      gitlab_rails['backup_keep_time'] = 604800
      gitlab_rails['object_store']['enabled'] = {{ object_store.enable|lower }}
      gitlab_rails['object_store']['proxy_download'] = true
      gitlab_rails['object_store']['connection'] = {'provider' => '{{ provider }}', 'region' => '{{ region }}', 'use_iam_profile' => {{ use_iam_profile|lower }} }
      gitlab_rails['object_store']['objects']['artifacts']['bucket'] = '{{ object_store.bucket.artifact }}'
      gitlab_rails['object_store']['objects']['external_diffs']['bucket'] = '{{ object_store.bucket.external_diffs }}'
      gitlab_rails['object_store']['objects']['lfs']['bucket'] = '{{ object_store.bucket.lfs }}'
      gitlab_rails['object_store']['objects']['uploads']['bucket'] = '{{ object_store.bucket.uploads }}'
      gitlab_rails['object_store']['objects']['packages']['bucket'] = '{{ object_store.bucket.packages }}'
      gitlab_rails['object_store']['objects']['dependency_proxy']['bucket'] = '{{ object_store.bucket.dependency_proxy }}'
      gitlab_rails['object_store']['objects']['terraform_state']['bucket'] = '{{ object_store.bucket.terraform_state }}'
      gitlab_rails['backup_upload_connection'] = {'provider' => '{{ provider }}', 'region' => '{{ region }}', 'use_iam_profile' => '{{ use_iam_profile|lower }}' }
      gitlab_rails['backup_upload_remote_directory'] = '{{ backup_upload_remote_directory }}'
      gitlab_rails['time_zone'] = '{{ time_zone }}'
      # Gitlab Container Registry
      registry['enable'] = {{ registry.enable|lower }}
      registry_external_url '{{ registry_external_url }}' # Gitlab Registry DNS 정보
      registry_nginx['proxy_set_headers'] = { "X-Forwarded-Proto" => "https", "X-Forwarded-Ssl" => "on" }
      registry_nginx['listen_port'] = {{ registry.nginx_listen_port }}
      registry_nginx['listen_https'] = {{ registry.nginx_listen_https|lower }}
      registry['storage'] = { 's3' => { 'bucket' => '{{ registry.bucket }}', 'region' => '{{ region }}' }}
      # Set Nginx
      nginx['client_max_body_size'] = '{{ nginx.client_max_body_size }}'
      nginx['redirect_http_to_https'] = {{ nginx.redirect_http_to_https|lower }}
      nginx['gzip_enabled'] = {{ nginx.gzip_enabled|lower }}
      nginx['listen_port'] = {{ nginx.listen_port }}
      nginx['listen_https'] = {{ nginx.listen_https|lower }}
      nginx['proxy_set_headers'] = { "X-Forwarded-Proto" => "https", "X-Forwarded-Ssl" => "on" }
      # Letsencrypt SSL false
      letsencrypt['enable'] = {{ letsencrypt|lower }}

      # Disable the bundled Omnibus provided PostgreSQL
      postgresql['enable'] = {{ postgresql.enable|lower }}

      # PostgreSQL connection details
      gitlab_rails['db_adapter'] = {{ postgresql.db_adapter }}
      gitlab_rails['db_encoding'] = {{ postgresql.db_encoding }}
      gitlab_rails['db_host'] = {{ postgresql.db_host }}  # IP/hostname of database server
      gitlab_rails['db_password'] = {{ postgresql.db_password }} # DB Password
  ports:
    - "{{ ports.ssh }}"
    - "{{ ports.http }}"
    - "{{ ports.registry }}"
  volumes:
    - '{{ volumes.config }}'
    - '{{ volumes.logs }}'
    - '{{ volumes.data }}'
