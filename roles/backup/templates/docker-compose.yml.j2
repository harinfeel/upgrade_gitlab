web:
  image: "gitlab/gitlab-ee:latest"
  restart: always
  hostname: {{ gitlab_url }} 
  environment:
    GITLAB_OMNIBUS_CONFIG: |
      external_url "{{ external_url }}"
      gitlab_rails['lfs_enabled'] = {{ lfs_enabled }}
      gitlab_rails['backup_keep_time'] = 604800
      gitlab_rails['object_store']['enabled'] = {{ object_store.enable }}
      gitlab_rails['object_store']['proxy_download'] = true
      gitlab_rails['object_store']['connection'] = {'provider' => "{{ provider }}", 'region' => "{{ region }}", 'use_iam_profile' => "{{ use_iam_profile }}" }
      gitlab_rails['object_store']['objects']['artifacts']['bucket'] = "{{ object_store.bucket.artifact }}"
      gitlab_rails['object_store']['objects']['external_diffs']['bucket'] = "{{ object_store.bucket.external_diffs }}"
      gitlab_rails['object_store']['objects']['lfs']['bucket'] = "{{ object_store.bucket.lfs }}"
      gitlab_rails['object_store']['objects']['uploads']['bucket'] = "{{ object_store.bucket.uploads }}"
      gitlab_rails['object_store']['objects']['packages']['bucket'] = "{{ object_store.bucket.packages }}"
      gitlab_rails['object_store']['objects']['dependency_proxy']['bucket'] = "{{ object_store.bucket.dependency_proxy }}"
      gitlab_rails['object_store']['objects']['terraform_state']['bucket'] = "{{ object_store.bucket.terraform_state }}"
      gitlab_rails['backup_upload_connection'] = {'provider' => "{{ provider }}", 'region' => "{{ region }}", 'use_iam_profile' => "{{ use_iam_profile }}" }
      gitlab_rails['backup_upload_remote_directory'] = "{{ backup_upload_remote_directory }}"
      gitlab_rails['time_zone'] = "{{ time_zone }}"
      # Gitlab Container Registry
      registry['enable'] = "{{ registry.enable }}"
      registry_external_url "{{ registry_external_url }}" # Gitlab Registry DNS 정보
      registry_nginx['proxy_set_headers'] = { "X-Forwarded-Proto" => "https", "X-Forwarded-Ssl" => "on" }
      registry_nginx['listen_port'] = "{{ registry.nginx_listen_port }}"
      registry_nginx['listen_https'] = "{{ registry.nginx_listen_https }}"
      registry['storage'] = { 's3' => { 'bucket' => "{{ registry.bucket }}", 'region' => "{{ region }}" }}
      # Set Nginx
      nginx['client_max_body_size'] = "{{ nginx.client_max_body_size }}"
      nginx['redirect_http_to_https'] = "{{ nginx.redirect_http_to_https }}"
      nginx['gzip_enabled'] = "{{ nginx.gzip_enabled }}"
      nginx['listen_port'] = "{{ nginx.listen_port }}"
      nginx['listen_https'] = "{{ nginx.listen_https }}"
      nginx['proxy_set_headers'] = { "X-Forwarded-Proto" => "https", "X-Forwarded-Ssl" => "on" }
      # Letsencrypt SSL false
      letsencrypt['enable'] = "{{ letsencrypt }}" 
  ports:
    - "{{ ports.ssh }}"
    - "{{ ports.http }}"
    - "{{ ports.registry }}"
  volumes:
    - "{{ volumes.config }}"
    - "{{ volumes.logs }}"
    - "{{ volumes.data }}"
